# -*- coding: utf-8 -*-
"""knn_classfication.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_aWtymwknBu3q2h5PVTiDyplhrYCqcOh
"""

# Import libraries
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Step 1: Load dataset
data = load_iris()
X = data.data
y = data.target

# Step 2: Split data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# Step 3: Feature scaling (KNN works better with scaled features)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Step 4: Create KNN model with k=5 (a common choice)
model = KNeighborsClassifier(n_neighbors=5)

# Step 5: Train the model
model.fit(X_train, y_train)

# Step 6: Predict on both training and test data
y_train_pred = model.predict(X_train)
y_test_pred = model.predict(X_test)

# Step 7: Evaluate accuracy for both
train_accuracy = accuracy_score(y_train, y_train_pred)
test_accuracy = accuracy_score(y_test, y_test_pred)

# Step 8: Print results
print("Training Accuracy:", train_accuracy)
print("Testing Accuracy:", test_accuracy)

# Optional: Detailed performance
print("\nClassification Report:\n", classification_report(y_test, y_test_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_test_pred))